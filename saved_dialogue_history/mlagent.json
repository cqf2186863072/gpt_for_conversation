[{"role": "system", "content": ""}, {"role": "user", "content": "\u4f60\u597d"}, {"role": "assistant", "content": "\u4f60\u597d\uff01\u6709\u4ec0\u4e48\u6211\u53ef\u4ee5\u5e2e\u52a9\u60a8\u7684\u5417\uff1f"}, {"role": "user", "content": "\u73b0\u5728\u6211\u6709\u4e00\u4e2amlagent\u6d4b\u8bd5\u9879\u76ee\uff0c\u6e38\u620f\u573a\u666f\u4e2d\u6709\u4e00\u4e2aUI\uff0cUI\u4e0a\u4f1a\u663e\u793a\u4e00\u4e2a\u6570\u5b57\uff0c\u6e38\u620f\u89c4\u5219\u662f\uff0c\u73a9\u5bb6\u731c\u4e00\u4e2a\u6570\uff0c\u7cfb\u7edf\u544a\u77e5\u8fd9\u4e2a\u6570\u6bd4UI\u663e\u793a\u7684\u6570\u5927\u6216\u662f\u5c0f\uff0c\u7136\u540e\u73a9\u5bb6\u4e0d\u65ad\u5730\u731c\uff0c\u76f4\u5230\u731c\u4e2d\u90a3\u4e2a\u6570\u4e3a\u6b62\uff0c\u6211\u5e0c\u671b\u8bad\u7ec3\u4e00\u4e2aagent\uff0c\u4f7f\u5f97\u5b83\u53ef\u4ee5\u5feb\u901f\u5730\u731c\u51fa\u8fd9\u4e2a\u6570\u3002\u73b0\u5728\u6211\u5df2\u7ecf\u6709\u4e00\u4e2a\u811a\u672c\u6302\u8f7d\u5728\u6e38\u620f\u5bf9\u8c61\u4e0a\u4e86\uff0c\u5982\u4e0b\uff1a\nusing TMPro;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\n\npublic class NumberController : MonoBehaviour\n{\n    public GameObject number;\n    public TextMeshProUGUI tmp;\n    private int randomNumber;\n\n    private void Start()\n    {\n        // number = GameObject.Find('Number');\n        tmp = number.GetComponent<TextMeshProUGUI> ();\n        randomNumber = UnityEngine.Random.Range(0, 51);\n        tmp.text = randomNumber.ToString();\n    }\n\n    private void Update()\n    {\n        \n    }\n}\n\u6211\u5e0c\u671b\u4f60\u5e2e\u6211\u5b8c\u5584\u4e0a\u9762\u7684\u811a\u672c\uff0c\u5e76\u4e14\u5b8c\u6210\u4e0b\u9762\u7684\u811a\u672c\uff08\u6302\u8f7d\u5728agent\u4e0a\u7684\u811a\u672c\uff09\uff1a\nusing UnityEngine;\nusing Unity.MLAgents;\nusing Unity.MLAgents.Actuators;\nusing Unity.MLAgents.Sensors;\n\npublic class TestAgent : Agent\n{\n    \n}"}, {"role": "assistant", "content": "\u6211\u53ef\u4ee5\u5e2e\u4f60\u5b8c\u5584\u8fd9\u4e24\u4e2a\u811a\u672c\u3002\u9996\u5148\uff0c\u6211\u4eec\u5728`NumberController`\u811a\u672c\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b9\u6cd5\u6765\u5224\u65ad\u73a9\u5bb6\u731c\u6d4b\u7684\u6570\u5b57\u662f\u5426\u6b63\u786e\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u7136\u540e\uff0c\u6211\u4eec\u5728`TestAgent`\u811a\u672c\u4e2d\u6dfb\u52a0\u6240\u9700\u7684\u65b9\u6cd5\u6765\u8bad\u7ec3\u4ee3\u7406\u3002\n\n\u4fee\u6539\u540e\u7684`NumberController`\u811a\u672c\uff1a\n\n```csharp\nusing TMPro;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\n\npublic class NumberController : MonoBehaviour\n{\n    public GameObject number;\n    public TextMeshProUGUI tmp;\n    private int randomNumber;\n\n    private void Start()\n    {\n        tmp = number.GetComponent<TextMeshProUGUI> ();\n        randomNumber = UnityEngine.Random.Range(0, 51);\n        tmp.text = randomNumber.ToString();\n    }\n\n    private void Update()\n    {\n\n    }\n\n    public int CheckGuess(int guess)\n    {\n        if (guess == randomNumber)\n        {\n            return 0; // \u731c\u6d4b\u6b63\u786e\n        }\n        else if (guess < randomNumber)\n        {\n            return -1; // \u731c\u6d4b\u7684\u6570\u5b57\u5c0f\u4e8e\u76ee\u6807\u6570\u5b57\n        }\n        else\n        {\n            return 1; // \u731c\u6d4b\u7684\u6570\u5b57\u5927\u4e8e\u76ee\u6807\u6570\u5b57\n        }\n    }\n}\n```\n\n`TestAgent`\u811a\u672c\uff1a\n\n```csharp\nusing UnityEngine;\nusing Unity.MLAgents;\nusing Unity.MLAgents.Actuators;\nusing Unity.MLAgents.Sensors;\n\npublic class TestAgent : Agent\n{\n    public NumberController numberController;\n    private int guess;\n\n    public override void Initialize()\n    {\n        numberController = GameObject.FindObjectOfType<NumberController>();\n    }\n\n    public override void OnEpisodeBegin()\n    {\n        guess = 0;\n    }\n\n    public override void CollectObservations(VectorSensor sensor)\n    {\n        sensor.AddObservation(guess);\n    }\n\n    public override void OnActionReceived(ActionBuffers actions)\n    {\n        int action = actions.DiscreteActions[0];\n\n        if (action == 0)\n        {\n            guess++;\n        }\n        else if (action == 1)\n        {\n            guess--;\n        }\n\n        int result = numberController.CheckGuess(guess);\n\n        if (result == 0)\n        {\n            SetReward(1.0f);\n            EndEpisode();\n        }\n        else\n        {\n            SetReward(-0.01f);\n        }\n    }\n\n    public override void Heuristic(in ActionBuffers actionsOut)\n    {\n        var discreteActionsOut = actionsOut.DiscreteActions;\n        discreteActionsOut[0] = 0;\n\n        if (Input.GetKey(KeyCode.UpArrow))\n        {\n            discreteActionsOut[0] = 0;\n        }\n        else if (Input.GetKey(KeyCode.DownArrow))\n        {\n            discreteActionsOut[0] = 1;\n        }\n    }\n}\n```\n\n\u73b0\u5728\uff0c`TestAgent`\u811a\u672c\u5df2\u7ecf\u53ef\u4ee5\u4e0e`NumberController`\u811a\u672c\u8fdb\u884c\u4ea4\u4e92\u3002\u4ee3\u7406\u4f1a\u6839\u636e\u5176\u731c\u6d4b\u7ed3\u679c\u8c03\u6574\u5176\u731c\u6d4b\uff0c\u5e76\u5728\u731c\u5bf9\u6570\u5b57\u65f6\u83b7\u5f97\u5956\u52b1\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4ee3\u7406\u4f1a\u5b66\u4f1a\u5982\u4f55\u5feb\u901f\u731c\u51fa\u6b63\u786e\u7684\u6570\u5b57\u3002"}]